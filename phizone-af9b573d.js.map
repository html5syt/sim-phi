{"version":3,"file":"phizone-af9b573d.js","sources":["../src/plugins/phizone.js"],"sourcesContent":["export default hook.define({\n  name: 'PhiZone',\n  description: 'PhiZone API',\n  contents: [\n    {\n      type: 'command',\n      meta: ['/pz', dialog]\n    },\n    {\n      type: 'command',\n      meta: ['/pzc', dialogc]\n    },\n    {\n      type: 'command',\n      meta: ['/random', random]\n    }\n  ]\n});\nconst { sendText, uploader } = hook;\nconst host = 'https://api.phizone.cn';\nconst getSongUrlByUUID = (id = '') => `${host}/songs/${id}/`;\nconst getSongsUrlByIndex = (index = 0) => `${host}/songs/?perpage=1&page=${index}`;\nconst getChartsUrlByIndex = (index = 0) => `${host}/charts/?perpage=1&page=${index}`;\nconst getChartsUrlByUUID = (id = '') => `${host}/songs/${id}/charts/`;\nconst getRandomChartUrl = () => `${host}/charts/random/?rangeFormat=0&rangeFormat=1`;\nconst ver = 'PhiZone API v0.8.3';\n// eslint-disable-next-line no-alert\nconst vprompt = str => prompt(`${ver}\\n${str}`);\nconst valert = str => hook.toast(`${ver}\\n${str}`);\nasync function dialog(num) {\n  const id = num || vprompt('请输入歌曲ID');\n  if (id === '' || id === null) { valert('未输入歌曲ID，已取消操作'); return }\n  const data = await query(id).catch(err => {\n    valert(`无法连接至服务器\\n错误代码：${err.message}`);\n    sendText('无法连接至服务器');\n  });\n  console.log(data);\n  if (!data) return;\n  if (!data.charts.length) { valert(`歌曲ID ${id} 对应的谱面不存在`); return }\n  await readData(data);\n}\nasync function dialogc(num) {\n  const id = num || vprompt('请输入谱面ID');\n  if (id === '' || id === null) { valert('未输入谱面ID，已取消操作'); return }\n  const data = await queryChart(id).catch(err => {\n    valert(`无法连接至服务器\\n错误代码：${err.message}`);\n    sendText('无法连接至服务器');\n  });\n  console.log(data);\n  if (!data) return;\n  if (!data.charts.length) { valert(`谱面ID ${id} 对应的谱面不存在`); return }\n  await readData(data);\n}\nasync function random() {\n  const data = await queryRandom().catch(err => valert(`无法连接至服务器\\n错误代码：${err.message}`));\n  console.log(data);\n  if (!data) return;\n  if (!data.charts.length) { valert(`歌曲ID ${'<random>'} 对应的谱面不存在`); return }\n  await readData(data);\n}\nasync function query(id) {\n  sendText('等待服务器响应...');\n  const resS = await fetch(getSongsUrlByIndex(id | 0));\n  if (!resS.ok) throw new Error(`${resS.status} ${resS.statusText}`);\n  const song = ((await resS.json()).data || [])[0];\n  if (!song) return { charts: [] };\n  const resC = await fetch(getChartsUrlByUUID(song.id));\n  if (!resC.ok) throw new Error(`${resC.status} ${resC.statusText}`);\n  const charts = (await resC.json()).data || [];\n  return getData(charts.filter(a => a.file), song);\n}\nasync function queryChart(id) {\n  sendText('等待服务器响应...');\n  const resC = await fetch(getChartsUrlByIndex(id | 0));\n  if (!resC.ok) throw new Error(`${resC.status} ${resC.statusText}`);\n  const chart = ((await resC.json()).data || [])[0];\n  if (!chart || !chart.file) return { charts: [] };\n  const resS = await fetch(getSongUrlByUUID(chart.songId));\n  if (!resS.ok) throw new Error(`${resS.status} ${resS.statusText}`);\n  const song = (await resS.json()).data;\n  return getData([chart], song);\n}\nasync function queryRandom() {\n  sendText('等待服务器响应...');\n  const resC = await fetch(getRandomChartUrl());\n  if (!resC.ok) throw new Error(`${resC.status} ${resC.statusText}`);\n  const chart = (await resC.json()).data;\n  const resS = await fetch(getSongUrlByUUID(chart.songId));\n  if (!resS.ok) throw new Error(`${resS.status} ${resS.statusText}`);\n  const song = (await resS.json()).data;\n  return getData([chart], song);\n}\nfunction getData(base, song) {\n  console.log('getData::base', ...base);\n  console.log('getData::song', song);\n  return {\n    charts: base.map(a => ({\n      id: a.id,\n      chart: a.file,\n      level: `${a.level}\\u2002Lv.${a.difficulty | 0}`,\n      charter: a.authorName.replace(/\\[PZUser:\\d+:([^\\]]+?)(:PZRT)?\\]/g, '$1'),\n      assets: a.assets // qwq\n    })),\n    composer: song.authorName,\n    illustration: song.illustration,\n    illustrator: song.illustrator,\n    name: song.title,\n    song: song.file\n  };\n}\nasync function readData(data) {\n  const /** @type {array} */ { charts } = data;\n  const urls = [data.song, data.illustration];\n  for (const chart of charts) {\n    if (chart.chart) urls.push(chart.chart);\n    if (chart.assets) urls.push(chart.assets);\n  }\n  const downloader = new Downloader();\n  const dstr = str => decodeURIComponent(str.match(/[^/]+$/)[0]);\n  sendText('获取资源列表...');\n  await downloader.add(urls, ({ url, status, statusText }) => {\n    valert(`资源 '${dstr(url)}' 加载失败\\n错误代码：${status} ${statusText}`);\n  });\n  await downloader.start(uploader.fireProgress.bind(uploader));\n  const xhr4 = async(url, name) => {\n    const data1 = await downloader.getData(url) || new ArrayBuffer(0);\n    uploader.fireLoad({ name }, data1); // 以后添加catch\n  };\n  await xhr4(data.song, dstr(data.song));\n  await xhr4(data.illustration, dstr(data.illustration));\n  for (let i = 0; i < charts.length; i++) {\n    const chart = charts[i];\n    if (chart.assets) await xhr4(chart.assets, dstr(chart.assets));\n    await xhr4(chart.chart, dstr(chart.chart));\n    const encoder = new TextEncoder();\n    const offset = getChartOffset(chart.id);\n    const infoText = `\n      #\n      Name: ${data.name}\n      Song: ${dstr(data.song)}\n      Picture: ${dstr(data.illustration)}\n      Chart: ${dstr(chart.chart)}\n      Level: ${chart.level}\n      Composer: ${data.composer}\n      Charter: ${chart.charter}\n      Illustrator: ${data.illustrator}\n      Offset: ${offset}\n    `;\n    const info = encoder.encode(infoText);\n    uploader.fireLoad({ name: 'info.txt' }, info.buffer);\n  }\n}\n/**\n * @typedef {(ev:ProgressEvent<XMLHttpRequest>)} XHR\n * @param {string} url\n * @param {XHR} onprogress\n */\nfunction xhr2(url, onprogress = _ => {}) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onprogress = onprogress;\n    xhr.onload = evt => (xhr.status === 200 ? resolve : reject)(evt);\n    xhr.onerror = reject;\n    xhr.send();\n  });\n}\n// async function xhr2(url, onprogress = _ => {}) {\n//   const data = [];\n//   let loaded = 0;\n//   const res = await fetch(url, { method: 'GET' });\n//   if (!res.ok) throw { url, status: res.status, statusText: res.statusText };\n//   const total = Number(res.headers.get('content-length'));\n//   const reader = res.body.getReader();\n//   while (true) {\n//     const { done, value } = await reader.read();\n//     if (done) break;\n//     data.push(value);\n//     loaded += value.length;\n//     onprogress({ loaded, total });\n//   }\n//   return { target: { response: new Blob(data).arrayBuffer() }, loaded, total };\n// }\nasync function getContentLength(url) {\n  try {\n    const res = await fetch(url, { method: 'HEAD' }).catch(() => {\n      throw Object.assign(new Error(), { url, status: 0, statusText: 'Network Error' });\n    });\n    const length = res.headers.get('content-length'); // 踩坑：这里的length是字符串\n    if (length == null) throw new Error('No Content-Length Header');\n    if (res.ok) return Number(length);\n  } catch (_) {\n    const res = await fetch(url, { method: 'GET' }).catch(() => {\n      throw Object.assign(new Error(), { url, status: 0, statusText: 'Network Error' });\n    });\n    res.body.cancel();\n    if (!res.ok) throw Object.assign(new Error(), { url, status: res.status, statusText: res.statusText });\n    return Number(res.headers.get('content-length')) || 0;\n  }\n  throw Object.assign(new Error(), { url, status: 0, statusText: 'Unknown Error' });\n}\nfunction Downloader() {\n  this.xhrs = Object.create(null);\n}\nDownloader.prototype.add = function(urls = [], onerror = _ => {}) {\n  return Promise.all(urls.\n    filter(url => !this.xhrs[url]).\n    map(async url => {\n      try {\n        const total = await getContentLength(url);\n        this.xhrs[url] = { event: { loaded: 0, total } };\n      } catch (result) {\n        onerror(result);\n      }\n    }));\n};\nDownloader.prototype.start = function(onprogress = (..._) => {}) {\n  const entries = Object.entries(this.xhrs);\n  return Promise.all(entries.map(([url, xhr]) => xhr2(url, evt => {\n    xhr.event = evt;\n    onprogress(this.loaded, this.total);\n  }).then(evt => xhr.event = evt).catch(evt => xhr.event = evt)));\n};\nDownloader.prototype.getData = function(url) {\n  if (!this.xhrs[url]) return null;\n  const { event } = this.xhrs[url];\n  if (event.loaded >= event.total) return event.target.response;\n  return null;\n};\nObject.defineProperty(Downloader.prototype, 'loaded', { get() {\n  const values = Object.values(this.xhrs);\n  return values.reduce((loaded, xhr) => loaded + xhr.event.loaded, 0);\n} });\nObject.defineProperty(Downloader.prototype, 'total', { get() {\n  const values = Object.values(this.xhrs);\n  return values.reduce((total, xhr) => total + Math.max(xhr.event.loaded, xhr.event.total), 0);\n} });\nfunction getChartOffset(id) {\n  if (id === '0ada5f8d-7f1d-426e-b53d-747d4489e255') return 100; // 29\n  if (id === '5201e181-b5d1-4931-9785-e78cbed0758e') return 50; // 34\n  if (id === '8747c9b5-9029-499d-b1d5-59bd46e2522f') return 150; // 35\n  if (id === 'ccf6522f-d746-4b76-9b3b-09d6534fd99e') return 50; // 38\n  if (id === '5d17fa22-51da-48e3-b56d-29ed782d830b') return 175; // 39\n  if (id === '67b8c0fd-4879-41e3-af04-6dc8f41ddcd1') return -500; // 48\n  if (id === 'e15c5743-fbb1-4d36-9821-43208a75bf07') return 100; // 51\n  if (id === '2eb9e940-4350-4509-a244-068abd937f44') return 50; // 53\n  if (id === '026c8905-6f24-421c-a594-e5f9bf1d053a') return 150; // 54\n  if (id === '71acb2d4-225e-4b0a-989c-660f4c075542') return 175; // 57\n  if (id === '165119b8-7074-4106-bb23-27a8fb99c0c6') return 150; // 58\n  if (id === '846587d2-0ff2-40ca-b42b-3568cef08e48') return 250; // 59\n  if (id === '74585cab-6b6f-4633-9c3d-4dfa9900cafd') return -100; // 61\n  if (id === '108254a0-a756-4200-8391-1f47bb7707aa') return -50; // 68\n  if (id === '8c4d638a-a1aa-4e29-a0d2-2f3a2cb7e69c') return 300; // 69\n  if (id === 'e29e6b87-796f-4518-ac33-d9db79bbc103') return 200; // 70\n  if (id === '7457a0a7-5d50-4e5e-b5a5-6049100a168e') return 200; // 72\n  if (id === 'c4dc62c4-7bed-4f39-b6ed-451ecdcb9b6b') return 250; // 73\n  if (id === '53e2ca24-2212-4795-be30-1a80cebbc339') return 250; // 76\n  if (id === 'af635f4b-df9c-42ad-9f8d-e20c0e2aebad') return 400; // 77\n  if (id === 'e4307062-420a-49a2-8515-b22375e7f6c4') return -50; // 79\n  if (id === 'f0b1e2eb-f7f8-42ec-bcb3-6a717147ad4e') return 225; // 80\n  if (id === '918a8854-04be-47e3-bfae-62699d193fee') return 200; // 82\n  if (id === 'ed0d5555-7573-4b9d-a491-b22aeab66da7') return 200; // 83\n  if (id === 'd7ad0802-22e1-4efc-8bba-4cfe074d2a95') return 200; // 85\n  if (id === 'f2398611-f145-45f5-b4f9-78be5f97fa86') return 175; // 86\n  if (id === '7be304a2-74cc-48a7-80bb-98de40cd814d') return -25; // 88\n  if (id === '232ec440-647e-4319-96c2-17e97f4ea55d') return 150; // 90\n  if (id === '11eae627-ff9e-48fe-8c9f-2d49d6e34221') return -100; // 91\n  if (id === '79a029ad-1579-44d2-8ed2-f2c7cc8c6589') return -200; // 92\n  if (id === '18686678-cd3b-493e-accb-c6ca0bc304c5') return -50; // 93\n  if (id === 'acab357e-ac69-4e8c-88b4-f8a080560c52') return -400; // 95\n  if (id === 'cfab519d-794d-4791-8881-969b00c60b46') return 150; // 96\n  if (id === '20bec844-02b8-49e3-8c60-8bf8b8a36a96') return 200; // 97\n  if (id === '5230368a-0764-4d17-8673-23c3b5a995d8') return 150; // 99\n  if (id === '0ebddbc4-ff08-4484-8f21-bd0295526bdc') return 50; // 101\n  if (id === '430a4ff2-e9e2-4add-9ee4-fbc172367e5d') return 200; // 104\n  if (id === '260d12cf-847a-4773-aaf0-b754753f5596') return 75; // 108\n  if (id === 'e5e9021d-9254-408d-8629-795849f51732') return 75; // 109\n  if (id === '9d01431f-7c81-4fb5-a9a4-5f5ef4e07cd3') return 175; // 110\n  if (id === '1476dcb7-37c8-4f97-b039-7e07a8583078') return 50; // 113\n  if (id === '2b8217af-3c7b-44b2-a9c9-fe869ea17c07') return 50; // 114\n  if (id === 'e7ab7d3b-1be4-4300-b9d6-63814faa381c') return 150; // 116\n  if (id === 'a7b12a21-cb2c-4e79-9260-2cc3323752df') return -400; // 117\n  if (id === '39a834ed-7310-46ac-99e4-577cde527a84') return -150; // 118\n  if (id === 'da8533af-9767-47b0-87c0-c12684e02980') return -1450; // 127\n  if (id === '97e22151-1cb8-4c48-8af4-c3419ed6b9ce') return 175; // 129\n  if (id === '8d3c6775-9091-45bd-b6ff-d556cf36e85f') return -350; // 130\n  if (id === '336b6099-61c1-403b-b226-483afc4a7bec') return 25; // 137\n  if (id === 'b788d213-58e1-448f-8412-cebe8c8df12a') return 50; // 138\n  if (id === '04181380-bdcf-40f3-8ec7-68a23ad84ba3') return 50; // 139\n  if (id === '594e3208-8459-48ae-88e8-b11823e5c2ad') return 250; // 140\n  if (id === '84f0ce5f-b894-4db6-b042-b31232c62d0c') return -150; // 141\n  if (id === '920506fb-2c52-4d17-b7e7-d8f1fe6afde5') return 225; // 144\n  if (id === 'd12f18e4-ca64-4781-97ee-a7d922c831cf') return 50; // 146\n  if (id === '70c543f8-97c5-4a2d-82ff-17efc484d52f') return 400; // 148\n  if (id === 'fb716191-ffb4-462b-b92d-85c86f94833e') return -200; // 150\n  if (id === 'b15f2eb5-d9c1-40f7-9bc8-4ccbc69229c6') return 200; // 151\n  if (id === 'a837eea9-b4a3-4c77-b7e5-757f4e940307') return 150; // 155\n  if (id === '710750c5-3728-46b8-bfb2-f895f1f909c0') return 350; // 156\n  if (id === '0108b4f0-d3ee-47a0-b6a1-bddcfad8f54d') return 400; // 157\n  if (id === 'fbd4ca74-40c3-4c9f-9415-729f47d537fb') return -25; // 160\n  if (id === '0a42b7b5-8a25-4438-b221-c9c0e585f27c') return -25; // 161\n  if (id === 'e59e5ef8-d444-4dc6-aebe-44bfd4891a94') return -50; // 162\n  if (id === 'c2006c12-e1c2-47ba-8292-c6c00b37dfbf') return 50; // 165\n  if (id === '2b0338d9-e71a-40fe-8d79-dc8f6dec48da') return 50; // 166\n  // handled up to 174\n  return 0;\n}\n"],"names":["phizone","hook","define","name","description","contents","type","meta","async","num","id","vprompt","valert","data","sendText","resS","fetch","getSongsUrlByIndex","ok","Error","status","statusText","song","json","charts","resC","getChartsUrlByUUID","getData","filter","a","file","query","catch","err","message","console","log","length","readData","getChartsUrlByIndex","chart","getSongUrlByUUID","songId","queryChart","getRandomChartUrl","queryRandom","uploader","host","w","v","index","E","T","D","ver","str","prompt","toast","base","map","level","difficulty","charter","authorName","replace","assets","composer","illustration","illustrator","title","urls","push","downloader","Downloader","dstr","decodeURIComponent","match","add","url","start","fireProgress","bind","xhr4","data1","ArrayBuffer","fireLoad","i","encoder","TextEncoder","offset","getChartOffset","infoText","info","encode","buffer","this","xhrs","Object","create","prototype","onerror","_","Promise","all","total","res","method","assign","headers","get","Number","body","cancel","getContentLength","event","loaded","result","onprogress","e","entries","xhr","resolve","reject","XMLHttpRequest","open","responseType","onload","evt","send","xhr2","then","target","response","defineProperty","values","reduce","Math","max"],"mappings":"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"}