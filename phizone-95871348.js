const t=hook.define({name:"PhiZone",description:"PhiZone API",contents:[{type:"command",meta:["/pz",w]},{type:"command",meta:["/pzs",w]},{type:"command",meta:["/pzc",async function(t){const a=t||f("请输入谱面ID");if(""===a||null==a)return void d("未输入谱面ID，已取消操作");const n=await async function(t){e("等待服务器响应...");const a=await fetch(o(0|t));if(!a.ok)throw new Error(`${a.status} ${a.statusText}`);const n=((await a.json()).data||[])[0];if(!n||!n.file)return{charts:[]};const s=await fetch(r(n.songId));if(!s.ok)throw new Error(`${s.status} ${s.statusText}`);return p([n],(await s.json()).data)}(a).catch(h);if(console.log(n),n){if(!n.charts.length)return void l(a);await b(n)}}]},{type:"command",meta:["/random",async function(){const t=await async function(){e("等待服务器响应...");const t=await fetch(i());if(!t.ok)throw new Error(`${t.status} ${t.statusText}`);const a=(await t.json()).data,n=await fetch(r(a.songId));if(!n.ok)throw new Error(`${n.status} ${n.statusText}`);return p([a],(await n.json()).data)}().catch(h);if(console.log(t),t){if(!t.charts.length)return void l("<random>");await b(t)}}]}]}),{sendText:e,uploader:a}=hook,n="https://api.phizone.cn",r=(t="")=>`${n}/songs/${t}/`,s=(t=0)=>`${n}/songs/?perpage=1&page=${t}`,o=(t=0)=>`${n}/charts/?perpage=1&page=${t}`,c=(t="")=>`${n}/songs/${t}/charts/`,i=()=>`${n}/charts/random/?rangeFormat=0&rangeFormat=1`,u="PhiZone API v0.8.5",f=t=>prompt(`${u}\n${t}`),d=t=>hook.toast(`${u}\n${t}`),h=t=>{d(`无法连接至服务器\n错误代码：${t.message}`),e("无法连接至服务器")},l=t=>{d(`歌曲ID ${t} 对应的谱面不存在`),e(`歌曲ID ${t} 对应的谱面不存在`)};async function w(t){const a=t||f("请输入歌曲ID");if(""===a||null==a)return void d("未输入歌曲ID，已取消操作");const n=await async function(t){e("等待服务器响应...");const a=await fetch(s(0|t));if(!a.ok)throw new Error(`${a.status} ${a.statusText}`);const n=((await a.json()).data||[])[0];if(!n)return{charts:[]};const r=await fetch(c(n.id));if(!r.ok)throw new Error(`${r.status} ${r.statusText}`);return p(((await r.json()).data||[]).filter((t=>t.file)),n)}(a).catch(h);if(console.log(n),n){if(!n.charts.length)return void l(a);await b(n)}}function p(t,e){return console.log("getData::base",...t),console.log("getData::song",e),{charts:t.map((t=>({id:t.id,chart:t.file,level:`${t.level} Lv.${0|t.difficulty}`,charter:t.authorName.replace(/\[PZUser:\d+:([^\]]+?)(:PZRT)?\]/g,"$1"),assets:t.assets}))),composer:e.authorName,illustration:e.illustration,illustrator:e.illustrator,name:e.title,song:e.file}}async function b(t){const{charts:n}=t,r=[t.song,t.illustration];for(const t of n)t.chart&&r.push(t.chart),t.assets&&r.push(t.assets);const s=new g,o=t=>decodeURIComponent(t.match(/[^/]+$/)[0]);e("获取资源列表..."),await s.add(r,(({url:t,status:e,statusText:a})=>{d(`资源 '${o(t)}' 加载失败\n错误代码：${e} ${a}`)})),await s.start(a.fireProgress.bind(a));const c=async(t,e)=>{const n=await s.getData(t)||new ArrayBuffer(0);a.fireLoad({name:e},n)};await c(t.song,o(t.song)),await c(t.illustration,o(t.illustration));for(let e=0;e<n.length;e++){const r=n[e];r.assets&&await c(r.assets,o(r.assets)),await c(r.chart,o(r.chart));const s=new TextEncoder,i=$(r.id),u=`\n      #\n      Name: ${t.name}\n      Song: ${o(t.song)}\n      Picture: ${o(t.illustration)}\n      Chart: ${o(r.chart)}\n      Level: ${r.level}\n      Composer: ${t.composer}\n      Charter: ${r.charter}\n      Illustrator: ${t.illustrator}\n      Offset: ${i}\n    `,f=s.encode(u);a.fireLoad({name:"info.txt"},f.buffer)}}function g(){this.xhrs=Object.create(null)}function $(t){return"67b8c0fd-4879-41e3-af04-6dc8f41ddcd1"===t?200:"2eb9e940-4350-4509-a244-068abd937f44"===t?-50:"846587d2-0ff2-40ca-b42b-3568cef08e48"===t?-25:"74585cab-6b6f-4633-9c3d-4dfa9900cafd"===t?75:"7be304a2-74cc-48a7-80bb-98de40cd814d"===t?-25:"cb8e99dd-2619-409b-a8b6-d83e2e5f6bb2"===t||"2b8217af-3c7b-44b2-a9c9-fe869ea17c07"===t?50:"e7ab7d3b-1be4-4300-b9d6-63814faa381c"===t?150:"797d3375-1fc6-47c6-a065-b76cb24805d3"===t?-75:"9ea96cf2-febc-4729-a3c3-8c11ec8ff751"===t?50:"a837eea9-b4a3-4c77-b7e5-757f4e940307"===t?150:"c2006c12-e1c2-47ba-8292-c6c00b37dfbf"===t?-25:"2b0338d9-e71a-40fe-8d79-dc8f6dec48da"===t?50:0}g.prototype.add=function(t=[],e=(t=>{})){return Promise.all(t.filter((t=>!this.xhrs[t])).map((async t=>{try{const e=await async function(t){try{const e=await fetch(t,{method:"HEAD"}).catch((()=>{throw Object.assign(new Error,{url:t,status:0,statusText:"Network Error"})})),a=e.headers.get("content-length");if(null==a)throw new Error("No Content-Length Header");if(e.ok)return Number(a)}catch{const e=await fetch(t,{method:"GET"}).catch((()=>{throw Object.assign(new Error,{url:t,status:0,statusText:"Network Error"})}));if(e.body.cancel(),!e.ok)throw Object.assign(new Error,{url:t,status:e.status,statusText:e.statusText});return Number(e.headers.get("content-length"))||0}throw Object.assign(new Error,{url:t,status:0,statusText:"Unknown Error"})}(t);this.xhrs[t]={event:{loaded:0,total:e}}}catch(t){e(t)}})))},g.prototype.start=function(t=((...t)=>{})){const e=Object.entries(this.xhrs);return Promise.all(e.map((([e,a])=>function(t,e=(t=>{})){return new Promise(((a,n)=>{const r=new XMLHttpRequest;r.open("GET",t,!0),r.responseType="arraybuffer",r.onprogress=e,r.onload=t=>(200===r.status?a:n)(t),r.onerror=n,r.send()}))}(e,(e=>{a.event=e,t(this.loaded,this.total)})).then((t=>a.event=t)).catch((t=>a.event=t)))))},g.prototype.getData=function(t){if(!this.xhrs[t])return null;const{event:e}=this.xhrs[t];return e.loaded>=e.total?e.target.response:null},Object.defineProperty(g.prototype,"loaded",{get(){return Object.values(this.xhrs).reduce(((t,e)=>t+e.event.loaded),0)}}),Object.defineProperty(g.prototype,"total",{get(){return Object.values(this.xhrs).reduce(((t,e)=>t+Math.max(e.event.loaded,e.event.total)),0)}});export{t as default};
//# sourceMappingURL=phizone-95871348.js.map
